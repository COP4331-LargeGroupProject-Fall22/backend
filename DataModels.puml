@startuml DataModels
interface IBaseFood {
    + id: number
    + name: string
    + category: string
}

interface IFood extends IBaseFood {
    + nutrients: INutrient[]
}

interface INutrient {
    + name: string
    + unit: IUnit
    + percentOfDaily: number
}

interface IUnit {
    + unit: string
    + value: number
}

interface IFoodItem extends IFood {
    + expirationDate: number
}

class FoodSchema implements IFood {}

class FoodItemSchema implements IFoodItem {}

class UnitSchema implements IUnit {}

class NutrientSchema implements INutrient {}

interface IBaseUser {
    + firstName: string
    + lastName: string
    + lastSeen: number
}

interface IUser extends IBaseUser {
    + inventory: IFoodItem[]
    + shoppingList?: IFood[]
    + favouriteRecipes?: IBaseRecipe[]
}

interface IUserIdentification {
    + id?: string
    + username: string
}

interface IExternalUser extends IUserIdentification, IUser {

}

interface ISchema {
    + validate(): any[]
}

interface IUserCredentials extends IUserIdentification {
    + password: string
}

interface IInternalUser extends IUserCredentials, IUser {}

class UserLoginSchema implements IUserCredentials, ISchema {}

class UserRegistrationSchema implements IUserCredentials, IBaseUser, ISchema {}

interface IBaseRecipe {
    + id: number
    + name: string
}

interface IRecipe extends IBaseRecipe {
    + cuisines: string[]
    + diets: string[] 
    + instruction: IInstruction
    + instructionSteps: IInstruction[]
    + servings: number
    + cookingTimeInMinutes: number
    + preparationInMinutes: number
    + type: string
    + totalCost: string
}

interface IInstruction {
    + instruction: string
    + ingredients: IFood[]
}

IFood *-- IUser
IFoodItem *-- IUser
IBaseRecipe *-- IUser

IFood *-- IInstruction
IInstruction *-- IRecipe
INutrient *-- IFood
IUnit *-- INutrient

@enduml